[versions]
converterGson = "2.9.0"
googleAuthLibraryOauth2Http = "0.20.0"
googleCloudSpeech = "1.22.3"
googleCloudTexttospeech = "0.80.0-beta"
grpcGoogleCloudSpeechV1 = "0.1.27"
grpcOkhttp = "1.21.0"
grpcStub = "1.70.0"
gson = "2.12.1"
kotlin = "2.1.10"
#noinspection GradleDependency
kotlin-grpc = "0.5.1-grpc-39"
kotlinPopper = "2.11.8-pre.792"
kotlinRemixRunRouter = "2025.1.6-1.21.0"
loggingInterceptor = "4.10.0"
okhttp = "4.12.0"
pbandk = "0.14.3"
protobuf = "0.9.4"
protoc = "4.29.3"
agp = "8.9.0"
compose = "1.7.8"
node = "22.0.0"
retrofit = "2.11.0"
yarn = "1.22.22"
compose-material3 = "1.3.1"
androidx-activityCompose = "1.10.1"
ktor = "3.1.1"
coroutines = "1.10.1"
ktorClientAndroid = "2.3.6"
lifecycleViewmodelKtx = "2.8.7"
serialization = "1.8.0"
datetime = "0.6.1"
kotlin-js-html = "0.11.0"
#noinspection GradleDependency
kotlin-wrappers = "2025.3.9"
kotlin-extensions = "1.0.1-pre.823"
kotlin-react = "2025.3.9-19.0.0"
kotlin-mui = "2025.3.9-5.16.14"
#noinspection GradleDependency
kotlin-router = "2025.1.6-6.28.0"

[libraries]
converter-gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "converterGson" }
google-auth-library-oauth2-http = { module = "com.google.auth:google-auth-library-oauth2-http", version.ref = "googleAuthLibraryOauth2Http" }
google-cloud-speech = { module = "com.google.cloud:google-cloud-speech", version.ref = "googleCloudSpeech" }
google-cloud-texttospeech = { module = "com.google.cloud:google-cloud-texttospeech", version.ref = "googleCloudTexttospeech" }
google-protobuf-java = { module = "com.google.protobuf:protobuf-java", version.ref = "protoc" }
google-protoc = { module = "com.google.protobuf:protoc", version.ref = "protoc" }
grpc-api = { module = "io.grpc:grpc-api", version.ref = "grpcStub" }
grpc-google-cloud-speech-v1 = { module = "com.google.api.grpc:grpc-google-cloud-speech-v1", version.ref = "grpcGoogleCloudSpeechV1" }
grpc-okhttp = { module = "io.grpc:grpc-okhttp", version.ref = "grpcOkhttp" }
grpc-stub = { module = "io.grpc:grpc-stub", version.ref = "grpcStub" }
gson = { module = "com.google.code.gson:gson", version.ref = "gson" }
kotlin-popper = { module = "org.jetbrains.kotlin-wrappers:kotlin-popper", version.ref = "kotlinPopper" }
kotlin-remix-run-router = { module = "org.jetbrains.kotlin-wrappers:kotlin-remix-run-router", version.ref = "kotlinRemixRunRouter" }
kotlinx-rpc-bom = { module = "org.jetbrains.kotlinx:kotlinx-rpc-bom", version.ref = "kotlin-grpc" }
kotlinx-rpc-grpc-core = { module = "org.jetbrains.kotlinx:kotlinx-rpc-grpc-core"}
logging-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "loggingInterceptor" }
node = { module = "org.nodejs:node", version.ref = "node" }


okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
pbandk-runtime = { module = "pro.streem.pbandk:pbandk-runtime", version.ref = "pbandk" }
pbandk-gen = { module = "pro.streem.pbandk:protoc-gen-pbandk-jvm", version = "0.14.3:jvm8@jar"}

retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
yarn = { module = "com.yarnpkg:yarn", version.ref = "yarn" }
androidx-lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycleViewmodelKtx" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }
compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "compose" }
compose-material3 = { module = "androidx.compose.material3:material3", version.ref = "compose-material3" }

ktor-client-android = { module = "io.ktor:ktor-client-android", version.ref = "ktorClientAndroid" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-js = { module = "io.ktor:ktor-client-js", version.ref = "ktor" }
ktor-client-websockets = { module = "io.ktor:ktor-client-websockets", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }

kotlin-js-html = { group = "org.jetbrains.kotlinx", name = "kotlinx-html-js", version.ref = "kotlin-js-html" }

kotlinx-rpc-krpc-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-rpc-krpc-serialization-json"}
kotlinx-rpc-krpc-client = { module = "org.jetbrains.kotlinx:kotlinx-rpc-krpc-client"}
kotlinx-rpc-krpc-server = { module = "org.jetbrains.kotlinx:kotlinx-rpc-krpc-server" }

kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "datetime" }

kotlin-js-wrappers-bom = { module = "org.jetbrains.kotlin-wrappers:kotlin-wrappers-bom", version.ref = "kotlin-wrappers" }


kotlin-js-wrappers = { module = "org.jetbrains.kotlin-wrappers:kotlin-js" }
kotlin-extensions = { module = "org.jetbrains.kotlin-wrappers:kotlin-extensions", version.ref = "kotlin-extensions" }
kotlin-react = { module = "org.jetbrains.kotlin-wrappers:kotlin-react", version.ref = "kotlin-react" }
kotlin-react-dom = { module = "org.jetbrains.kotlin-wrappers:kotlin-react-dom", version.ref = "kotlin-react" }
kotlin-emotion = { module = "org.jetbrains.kotlin-wrappers:kotlin-emotion"}
kotlin-react-router = { module = "org.jetbrains.kotlin-wrappers:kotlin-react-router", version.ref = "kotlin-router" }
kotlin-react-router-dom = { module = "org.jetbrains.kotlin-wrappers:kotlin-react-router-dom", version.ref = "kotlin-router" }
kotlin-mui = { module = "org.jetbrains.kotlin-wrappers:kotlin-mui-material",version.ref="kotlin-mui" }
kotlin-mui-icons = { module = "org.jetbrains.kotlin-wrappers:kotlin-mui-icons-material" ,version.ref="kotlin-mui"}

[plugins]
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-js = { id = "org.jetbrains.kotlin.js", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kotlin-rpc = { id = "org.jetbrains.kotlinx.rpc.plugin",version.ref="kotlin-grpc"}
protobuf = { id = "com.google.protobuf", version.ref = "protobuf" }
android-application = { id = "com.android.application", version.ref = "agp" }
android-library = { id = "com.android.library", version.ref = "agp" }
jetbrains-compose = { id = "org.jetbrains.compose", version.ref = "compose" }
jetbrains-compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
jetbrains-kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }

[bundles]
ktor-client = ["ktor-client-core", "ktor-client-cio", "ktor-client-websockets", "ktor-client-content-negotiation", "ktor-serialization-kotlinx-json"]
compose-common = ["compose-ui", "compose-ui-tooling", "compose-ui-tooling-preview", "compose-foundation", "compose-material3"]